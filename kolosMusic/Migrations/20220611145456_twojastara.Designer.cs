// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolosMusic.Entities;

namespace kolosMusic.Migrations
{
    [DbContext(typeof(S20813Context))]
    [Migration("20220611145456_twojastara")]
    partial class twojastara
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kolosMusic.Entities.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdMusicLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum")
                        .HasName("Album_pk");

                    b.HasIndex("IdMusicLabel");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            AlbumName = "Name",
                            IdMusicLabel = 1,
                            PublishDate = new DateTime(1999, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("kolosMusic.Entities.MusicLabel", b =>
                {
                    b.Property<int>("IdMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMusicLabel")
                        .HasName("MusicLabel_pk");

                    b.ToTable("MusicLabels");

                    b.HasData(
                        new
                        {
                            IdMusicLabel = 1,
                            Name = "Asd"
                        });
                });

            modelBuilder.Entity("kolosMusic.Entities.Musician", b =>
                {
                    b.Property<int>("IdMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMusician")
                        .HasName("Musiciahn_pk");

                    b.ToTable("Musciains");

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            FirstName = "Kuba",
                            LastName = "Nowak",
                            Nickname = "Xd"
                        });
                });

            modelBuilder.Entity("kolosMusic.Entities.MusicianTrack", b =>
                {
                    b.Property<int>("IdMusician")
                        .HasColumnType("int");

                    b.Property<int>("IdTrack")
                        .HasColumnType("int");

                    b.HasKey("IdMusician", "IdTrack")
                        .HasName("MusicianTrack_pk");

                    b.HasIndex("IdTrack");

                    b.ToTable("MusicianTracks");

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            IdTrack = 1
                        });
                });

            modelBuilder.Entity("kolosMusic.Entities.Track", b =>
                {
                    b.Property<int>("IdTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int?>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTrack")
                        .HasName("Track_pk");

                    b.HasIndex("IdAlbum");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            Duration = 1.1f,
                            IdAlbum = 1
                        },
                        new
                        {
                            IdTrack = 2,
                            Duration = 1.9f,
                            TrackName = "Name"
                        });
                });

            modelBuilder.Entity("kolosMusic.Entities.Album", b =>
                {
                    b.HasOne("kolosMusic.Entities.MusicLabel", "IdMusicalLabelNavigation")
                        .WithMany("Albums")
                        .HasForeignKey("IdMusicLabel")
                        .HasConstraintName("IdMusicLabel_fk")
                        .IsRequired();

                    b.Navigation("IdMusicalLabelNavigation");
                });

            modelBuilder.Entity("kolosMusic.Entities.MusicianTrack", b =>
                {
                    b.HasOne("kolosMusic.Entities.Musician", "IdMusicianNavigation")
                        .WithMany("musicianTracks")
                        .HasForeignKey("IdMusician")
                        .HasConstraintName("MusicianTrack_Musician")
                        .IsRequired();

                    b.HasOne("kolosMusic.Entities.Track", "IdTrackNavigation")
                        .WithMany("musicianTracks")
                        .HasForeignKey("IdTrack")
                        .HasConstraintName("MusicianTrack_Track")
                        .IsRequired();

                    b.Navigation("IdMusicianNavigation");

                    b.Navigation("IdTrackNavigation");
                });

            modelBuilder.Entity("kolosMusic.Entities.Track", b =>
                {
                    b.HasOne("kolosMusic.Entities.Album", "IdAlbumNavigation")
                        .WithMany("Tracks")
                        .HasForeignKey("IdAlbum")
                        .HasConstraintName("trac_Album");

                    b.Navigation("IdAlbumNavigation");
                });

            modelBuilder.Entity("kolosMusic.Entities.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("kolosMusic.Entities.MusicLabel", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("kolosMusic.Entities.Musician", b =>
                {
                    b.Navigation("musicianTracks");
                });

            modelBuilder.Entity("kolosMusic.Entities.Track", b =>
                {
                    b.Navigation("musicianTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
